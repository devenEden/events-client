const events = {
  GET_EVENTS_REQUEST: "GET_EVENTS_REQUEST",
  GET_EVENTS_SUCCESS: "GET_EVENTS_SUCCESS",
  GET_EVENTS_ERROR: "GET_EVENTS_ERROR",

  GET_MY_EVENTS_REQUEST: "GET_MY_EVENTS_REQUEST",
  GET_MY_EVENTS_SUCCESS: "GET_MY_EVENTS_SUCCESS",
  GET_MY_EVENTS_ERROR: "GET_MY_EVENTS_ERROR",

  ADD_EVENTS_REQUEST: "ADD_EVENTS_REQUEST",
  ADD_EVENTS_SUCCESS: "ADD_EVENTS_SUCCESS",
  ADD_EVENTS_ERROR: "ADD_EVENTS_ERROR",

  UPDATE_EVENTS_REQUEST: "UPDATE_EVENTS_REQUEST",
  UPDATE_EVENTS_SUCCESS: "UPDATE_EVENTS_SUCCESS",
  UPDATE_EVENTS_ERROR: "UPDATE_EVENTS_ERROR",
  UPDATE_EVENT_DATA: "UPDATE_EVENT_DATA",

  DELETE_EVENTS_REQUEST: "DELETE_EVENTS_REQUEST",
  DELETE_EVENTS_SUCCESS: "DELETE_EVENTS_SUCCESS",
  DELETE_EVENTS_ERROR: "DELETE_EVENTS_ERROR",

  GET_EVENT_DETAILS_REQUEST: "GET_EVENT_DETAILS_REQUEST",
  GET_EVENT_DETAILS_SUCCESS: "GET_EVENT_DETAILS_SUCCESS",
  GET_EVENT_DETAILS_ERROR: "GET_EVENT_DETAILS_ERROR",

  SEARCH_EVENTS_REQUEST: "SEARCH_EVENTS_REQUEST",
  SEARCH_EVENTS_SUCCESS: "SEARCH_EVENTS_SUCCESS",
  SEARCH_EVENTS_ERROR: "SEARCH_EVENTS_ERROR",

  SCAN_QR_CODE_REQUEST: "SCAN_QR_CODE_REQUEST",
  SCAN_QR_CODE_SUCCESS: "SCAN_QR_CODE_SUCCESS",
  SCAN_QR_CODE_ERROR: "SCAN_QR_CODE_ERROR",

  UPLOAD_EVENT_IMAGES_REQUEST: "UPLOAD_EVENT_IMAGES_REQUEST",
  UPLOAD_EVENT_IMAGES_SUCCESS: "UPLOAD_EVENT_IMAGES_SUCCESS",
  UPLOAD_EVENT_IMAGES_ERROR: "UPLOAD_EVENT_IMAGES_ERROR",

  scanQrCode: (data) => ({
    type: events.SCAN_QR_CODE_REQUEST,
    data,
  }),
  getMyEvents: (id) => ({
    type: events.GET_MY_EVENTS_REQUEST,
    id,
  }),
  getEvents: () => ({
    type: events.GET_EVENTS_REQUEST,
  }),
  addEvents: (data) => ({
    type: events.ADD_EVENTS_REQUEST,
    data,
  }),
  updateEvents: (data, id) => ({
    type: events.UPDATE_EVENTS_REQUEST,
    data,
    id,
  }),
  deleteEvents: (id) => ({
    type: events.DELETE_EVENTS_REQUEST,
    id,
  }),
  getEventDetails: (data) => ({
    type: events.GET_EVENT_DETAILS_REQUEST,
    data,
  }),
  searchEvents: (data) => ({
    type: events.SEARCH_EVENTS_REQUEST,
    data,
  }),
  updateEventData: (data) => ({
    type: events.UPDATE_EVENT_DATA,
    data,
  }),
  uploadEventImages: (data, id) => ({
    type: events.UPLOAD_EVENT_IMAGES_REQUEST,
    data,
    id,
  }),
};

export default events;
